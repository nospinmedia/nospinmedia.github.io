<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>No Spin Media Emoji Math</title>
    <link rel="stylesheet" href="style.css" />
</head>
<body>

    <div id="site-header"></div>

    <div class="container">
        <!-- ‚úÖ Main puzzle area -->
        <div class="main">
            <h1>No Spin Media Emoji Math</h1>
            <div id="puzzle-container"></div>
        </div>

        <!-- ‚úÖ Sidebar area -->
        <div class="sidebar">
            <h2>Support Us üíô</h2>
            <p>Like what we're doing? Help keep No Spin Media running:</p>
            <p><strong>Venmo:</strong><br/>
                <a href="https://venmo.com/NoSpinMedia" target="_blank">@NoSpinMedia</a>
            </p>

            <h2>Follow Us</h2>
            <p>
                üìò <a href="https://facebook.com/NoSpinNewsAI" target="_blank">facebook.com/NoSpinNewsAI</a>
            </p>

            <h2>We ‚ù§Ô∏è Your Thoughts!</h2>
            <p>
                Have an idea for a challenging emoji math puzzle? Want to send us general feedback or just say hi?
                We read every single message and might even publish your puzzle! üòä
            </p>
            <p>You can also reach us directly at: <strong>nospinmedia.ai@gmail.com</strong></p>

            <form id="feedbackForm">
                <input type="text" id="name" name="name" placeholder="Your first name">
                <input type="email" id="email" name="email" placeholder="you@email.com" required>
                <textarea id="message" name="message" rows="4" placeholder="Your feedback or puzzle idea..." required></textarea>
                <p id="formStatus"></p>
                <button type="submit">üí¨ Send Feedback</button>
            </form>
        </div>
    </div>

    <footer>
        ¬© 2025 No Spin Media. Independent. Truth-focused.<br>Seriously factual, surprisingly fun.
    </footer>

    <script>
        async function loadPuzzles() {
            const sheetURL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vSoyPjj_QxgVJ-l8BAetRaMyY-Lg_YjyGHfX98XqacaOkdDj553orqlaoPRkwicEcZjZsAL7_4w4nRS/pub?output=csv';
            const urlParams = new URLSearchParams(window.location.search);
            const targetID = urlParams.get('id');

            try {
                const response = await fetch(sheetURL);
                if (!response.ok) {
                    document.getElementById('puzzle-container').innerHTML = '<p style="color: red;">Failed to load puzzles.</p>';
                    return;
                }
                const text = await response.text();

                // CSV parsing
                const rows = [];
                let current = '', insideQuotes = false, row = [];
                for (let i = 0; i < text.length; i++) {
                    const char = text[i];
                    if (char === '"' && text[i+1] === '"') { current += '"'; i++; continue; }
                    if (char === '"') { insideQuotes = !insideQuotes; continue; }
                    if (char === ',' && !insideQuotes) { row.push(current); current = ''; continue; }
                    if ((char === '\n' || char === '\r') && !insideQuotes) {
                        if (current || row.length) {
                            row.push(current);
                            if (row.some(cell => cell.trim() !== '')) rows.push(row);
                            row = [];
                            current = '';
                        }
                        continue;
                    }
                    current += char;
                }
                if (current || row.length) { 
                    row.push(current); 
                    if (row.some(cell => cell.trim() !== '')) rows.push(row);
                }

                const data = rows.slice(1);
                let puzzles = data.filter(r => (r[6] || '').toLowerCase().includes('yes'));
                if (targetID) puzzles = puzzles.filter(r => r[7] && r[7].trim() === targetID);
                else puzzles = puzzles.reverse();

                const puzzleContainer = document.getElementById('puzzle-container');
                puzzleContainer.innerHTML = '';
                
                if (puzzles.length === 0) {
                    puzzleContainer.innerHTML = '<p>No emoji math puzzles found.</p>';
                    return;
                }

                puzzles.forEach(p => {
                    const postID = p[7];
                    const emojiPuzzle = (p[1] || '').replace(/Key Below.*/i, '').trim();
                    const cleanAnswerText = (p[2] || '').replace(/‚Äî Powered by No Spin Media[\s\S]*/i, '').trim();
                    const cleanHint = (p[5] || '').replace(/‚Äî Powered by No Spin Media[\s\S]*/i, '').trim();

                    const match = cleanAnswerText.match(/answer\s+is\s+(\d+)/i) ||
                                  cleanAnswerText.match(/Final\s+answer:\s+(\d+)/i) ||
                                  cleanAnswerText.match(/=\s*(\d+)/);
                    const numericAnswer = match ? parseInt(match[1]) : null;

                    const card = document.createElement('div');
                    card.className = 'puzzle-card';
                    card.innerHTML = `
                        <h3 class="emoji-math-problem">${emojiPuzzle}</h3>
                        <p class="hint">${cleanHint}</p>

                        <input type="number" placeholder="Your answer..." class="guess-input" />
                        <button onclick="checkGuess(this, ${numericAnswer})">Check</button>
                        <p class="feedback"></p>

                        <button onclick="toggleAnswer(this)">Show Answer</button>
                        <button class="share-btn" onclick="sharePuzzle('${postID}')">Share</button>
                        <p class="answer"><strong>Answer:</strong>\n${cleanAnswerText}</p>
                    `;
                    puzzleContainer.appendChild(card);
                });
            } catch (error) {
                document.getElementById('puzzle-container').innerHTML = '<p style="color: red;">Error loading puzzles.</p>';
            }
        }

        function toggleAnswer(btn) {
            const answerEl = btn.parentElement.querySelector('.answer');
            answerEl.classList.toggle('show');
            btn.textContent = answerEl.classList.contains('show') ? 'Hide Answer' : 'Show Answer';
        }

        function checkGuess(btn, correct) {
            const input = btn.previousElementSibling;
            const feedback = btn.nextElementSibling;
            const guess = parseInt(input.value);
            if (isNaN(guess)) {
                feedback.textContent = "‚ùì Enter a number first!";
                feedback.style.color = "#d00";
                return;
            }
            if (guess === correct) {
                feedback.textContent = "üéâ Correct!";
                feedback.style.color = "green";
            } else {
                feedback.textContent = "‚ùå Try again!";
                feedback.style.color = "#d00";
            }
        }

        function sharePuzzle(postID) {
            const url = `${window.location.origin}${window.location.pathname}?id=${postID}`;
            navigator.clipboard.writeText(url).then(() => {
                alert("üîó Puzzle link copied!");
            });
        }

        document.addEventListener('DOMContentLoaded', function() {
            fetch('header.html')
                .then(res => res.text())
                .then(html => {
                    document.getElementById('site-header').innerHTML = html;

                    const hamburger = document.getElementById('hamburger');
                    const mobileNav = document.getElementById('mobile-nav');

                    if (hamburger && mobileNav) {
                        hamburger.addEventListener('click', function() {
                            mobileNav.classList.toggle('open');
                            hamburger.classList.toggle('active');
                        });
                    }

                    loadPuzzles();
                })
                .catch(() => {
                    document.getElementById('site-header').innerHTML = '<p style="color: red; text-align: center;">Error loading header.</p>';
                });
        });
    </script>
</body>
</html>
